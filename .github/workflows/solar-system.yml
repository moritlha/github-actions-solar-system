name: Solar System Workflow

on: 
  workflow_dispatch:
  push:
    branches:
      - main
      - 'feature/*'


env:
  MONGO_URI: mongodb+srv://supercluster.d83jj.mongodb.net/superData
  MONGO_USERNAME: superuser
  MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD}}
  
    
jobs:
    unit-testing:
        name: Unit Testing
        runs-on: ubuntu-latest
        container: 
          image: 'node:20'
        steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        - name: Setup NodeJS Version
          uses: actions/setup-node@v3
          with:
            node-version: 20
        
        - name: Cache NPM dependencies
          uses: actions/cache@v3
          with:
            path: ~/.npm
            key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json') }}
            
        - name: Install Dependencies
          run: npm install
    
        # - name: Unit Testing
        #   id: unit-testing
        #   run: npm test
          
        - name: Archive Test Result  
          if: always()
          uses: actions/upload-artifact@v3
          with:
            name: Mocha-Test-Result
            path: test-results.xml

    code-coverage:
        name: Code Coverage
        runs-on: ubuntu-latest
        steps:
        - name: Checkout Repository
          uses: actions/checkout@v4
        
        
        - name: Setup NodeJs 
          uses: actions/setup-node@v3
          with:
            node-version: 18 
        
        - name: Install NodeJs Dependencies
          run: npm install
        
        - name: Code coverage
          continue-on-error: true
          run: npm run code coverage
        
        - name: Archive test results
          uses: actions/upload-artifact@v3
          with:
            name: Code-Coverage-Result
            path: coverage
            retention-days: 5
    
    docker:
      permissions:
        packages: write
      name: Docker push
      needs: [unit-testing, code-coverage]
      runs-on: ubuntu-latest

      steps:
        - name: Checkout Repository
          uses: actions/checkout@v4
      
        - name: Login to GitHub Container Registry
          uses: docker/login-action@v3
          with:
            registry: ghcr.io
            username: ${{ github.repository_owner }}
            password: ${{ secrets.GITHUB_TOKEN }}
        
        - name: Build and push Registry  
          uses: docker/build-push-action@v4
          with:
            context: .  # this '.' means that it's searching for the Docker file in the root director
            push: true
            tags: 'ghcr.io/${{ github.repository_owner }}/solar-system-test:${{ github.sha }}'
    
    dev-deploy:
      needs: docker
      runs-on: ubuntu-latest

      steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        - name: Install Kubectl
          uses: actions/setup-kubectl@v3
          with:
            version: 'v1.26.0' 
        
        - name: Setup kubecontext
          uses: actions/k8s-set-context@v3
          with:
              method: kubeconfig
              kubeconfig: ${{ secrets.KUBECONFIG }}

        - name:  Fetch Kubernetes Cluster Details
          run: |
            kubectl version --short -o yaml
            echo  ------------------------------------------------------------------------
            kubectl get nodes

      


